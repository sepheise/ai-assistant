name: main-ci
on: 
  push:
    branches:
      - 'main'
      - 'ci/**'
jobs:
  test:
    runs-on: macos-13
    outputs:
      buildStatus: ${{ steps.build-status.outputs.status }}
      testStatus: ${{ steps.tests-status.outputs.status }}
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Install the Apple certificate and provisioning profile
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
          PROVISIONING_PROFILE_ID: ${{ secrets.PROVISIONING_PROFILE_ID }}
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.PROVISIONING_PROFILE }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/$PROVISIONING_PROFILE_ID.provisionprofile
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # import certificate and provisioning profile from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode -o $PP_PATH

          # create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

          # apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles
      - name: Build for testing
        env:
          CODE_SIGN_IDENTITY: ${{ secrets.CODE_SIGN_IDENTITY }}
          PROVISIONING_PROFILE_ID: ${{ secrets.PROVISIONING_PROFILE_ID }}
        run: |
          open "~/Library/MobileDevice/Provisioning\ Profiles/${PROVISIONING_PROFILE_ID}.provisionprofile"
          sleep 5
          osascript -e "tell application \"Xcode\" to quit"

          xcodebuild build-for-testing \
            -configuration Release \
            -project AIAssistant/AIAssistant.xcodeproj \
            -scheme CI \
            CODE_SIGN_IDENTITY="$CODE_SIGN_IDENTITY" \
            CODE_SIGNING_REQUIRED=YES \
            PROVISIONING_PROFILE="$PROVISIONING_PROFILE_ID"
      - name: Save build status
        id: build-status
        run: echo "::set-output name=status::${{ job.status }}"
      - name: Run CI scheme Tests
        run: |
          xcodebuild test-without-building \
            -configuration Release \
            -project AIAssistant/AIAssistant.xcodeproj \
            -scheme CI \
            -resultBundlePath results/ResultBundle.xcresult
      - name: Save tests status
        id: tests-status
        run: echo "::set-output name=status::${{ job.status }}"
      - name: Archive tests results
        uses: actions/upload-artifact@v3
        with:
          name: tests-results
          path: results
          retention-days: 1
